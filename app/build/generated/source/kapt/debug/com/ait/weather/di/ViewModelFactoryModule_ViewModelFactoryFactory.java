// Generated by Dagger (https://google.github.io/dagger).
package com.ait.weather.di;

import android.app.Application;
import androidx.lifecycle.ViewModelProvider;
import com.ait.weather.Repository.ApiCall;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class ViewModelFactoryModule_ViewModelFactoryFactory
    implements Factory<ViewModelProvider.Factory> {
  private final ViewModelFactoryModule module;

  private final Provider<Application> mApplicationProvider;

  private final Provider<ApiCall> apiCallProvider;

  public ViewModelFactoryModule_ViewModelFactoryFactory(
      ViewModelFactoryModule module,
      Provider<Application> mApplicationProvider,
      Provider<ApiCall> apiCallProvider) {
    this.module = module;
    this.mApplicationProvider = mApplicationProvider;
    this.apiCallProvider = apiCallProvider;
  }

  @Override
  public ViewModelProvider.Factory get() {
    return provideInstance(module, mApplicationProvider, apiCallProvider);
  }

  public static ViewModelProvider.Factory provideInstance(
      ViewModelFactoryModule module,
      Provider<Application> mApplicationProvider,
      Provider<ApiCall> apiCallProvider) {
    return proxyViewModelFactory(module, mApplicationProvider.get(), apiCallProvider.get());
  }

  public static ViewModelFactoryModule_ViewModelFactoryFactory create(
      ViewModelFactoryModule module,
      Provider<Application> mApplicationProvider,
      Provider<ApiCall> apiCallProvider) {
    return new ViewModelFactoryModule_ViewModelFactoryFactory(
        module, mApplicationProvider, apiCallProvider);
  }

  public static ViewModelProvider.Factory proxyViewModelFactory(
      ViewModelFactoryModule instance, Application mApplication, ApiCall apiCall) {
    return Preconditions.checkNotNull(
        instance.viewModelFactory(mApplication, apiCall),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
