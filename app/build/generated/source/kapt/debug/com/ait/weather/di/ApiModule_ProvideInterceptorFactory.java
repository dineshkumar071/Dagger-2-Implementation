// Generated by Dagger (https://google.github.io/dagger).
package com.ait.weather.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import okhttp3.Interceptor;

public final class ApiModule_ProvideInterceptorFactory implements Factory<Interceptor> {
  private final ApiModule module;

  public ApiModule_ProvideInterceptorFactory(ApiModule module) {
    this.module = module;
  }

  @Override
  public Interceptor get() {
    return provideInstance(module);
  }

  public static Interceptor provideInstance(ApiModule module) {
    return proxyProvideInterceptor(module);
  }

  public static ApiModule_ProvideInterceptorFactory create(ApiModule module) {
    return new ApiModule_ProvideInterceptorFactory(module);
  }

  public static Interceptor proxyProvideInterceptor(ApiModule instance) {
    return Preconditions.checkNotNull(
        instance.provideInterceptor(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
